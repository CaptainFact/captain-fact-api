# ----- Config -----

stages:
  - test
  - build
  - package
  - release

variables:
  # Temporary build image
  CF_API_BUILD_IMAGE: captain-fact-api-build:$CI_COMMIT_REF_SLUG
  # Releases
  CF_API_REST_IMAGE: registry.gitlab.com/captainfact/captain-fact-api/rest:$CI_COMMIT_REF_SLUG
  CF_API_GRAPHQL_IMAGE: captainfact/graphql-api:$CI_COMMIT_REF_SLUG
  CF_API_ATOM_FEED: captainfact/atom-feed:$CI_COMMIT_REF_SLUG
  CF_API_OPENGRAPH_IMAGE: captainfact/opengraph:$CI_COMMIT_REF_SLUG

# ----- Jobs -----

test_api:
  stage: test
  only: [tags, triggers, schedules, pushes]
  tags: [docker]
  image: elixir:1.6
  services: ["postgres:9.6"]
  cache: {paths: ["_build", "deps"]}
  variables:
    MIX_ENV: test
    CF_DB_HOSTNAME: postgres
  before_script:
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get
    - mix ecto.create
    - mix ecto.migrate
  script:
    - mix coveralls --umbrella
    - mix format --check-formatted

build_api:
  stage: build
  only: [tags, triggers, schedules, /^(master|staging)$/]
  tags: [docker, captainfact, api]
  script:
    - docker build -t ${CF_API_BUILD_IMAGE} -f ./rel/docker/Dockerfile.build .

package_api:
  stage: package
  only: [tags, triggers, schedules, /^(master|staging)$/]
  tags: [docker, captainfact, api]
  script:
    - ./rel/docker/build_release.sh
      ${CF_API_BUILD_IMAGE}
      ${CF_API_REST_IMAGE}
      ${CF_API_GRAPHQL_IMAGE}
      ${CF_API_ATOM_FEED}
      ${CF_API_OPENGRAPH_IMAGE}

release_api:
  stage: release
  only: [tags, triggers, schedules, /^(master|staging)$/]
  tags: [docker, captainfact, api]
  script:
    - echo "Release $CF_API_REST_IMAGE + $CF_API_GRAPHQL_IMAGE"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker push $CF_API_REST_IMAGE
    - docker push $CF_API_GRAPHQL_IMAGE
    - docker push $CF_API_ATOM_FEED
    - docker push $CF_API_OPENGRAPH_IMAGE
