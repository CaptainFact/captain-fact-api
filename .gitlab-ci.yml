# ---- Config ----

stages:
  - prepare
  - test
  - build
  - release

variables:
  CF_API_BUILD_IMAGE: captain-fact-api-build:$CI_COMMIT_REF_NAME
  CF_API_REST_IMAGE: registry.gitlab.com/captainfact/captain-fact-api/rest:$CI_COMMIT_REF_NAME
  CF_API_GRAPHQL_IMAGE: registry.gitlab.com/captainfact/captain-fact-api/graphql:$CI_COMMIT_REF_NAME

# ---- Jobs ----

prepare_api:
  stage: prepare
  only: [tags, triggers, schedules, /^(master|staging)$/]
  tags: [docker, captainfact, api]
  script:
    - docker build -t ${CF_API_BUILD_IMAGE} -f ./rel/docker/Dockerfile.build .

test_api:
  stage: test
  only: [tags, triggers, schedules, /^(master|staging)$/]
  tags: [docker, captainfact, api]
  variables:
    TEST_NETWORK: network_api_testing
    TEST_DB: api_postgres_testing
  before_script:
    - (docker network rm $TEST_NETWORK || /bin/true) && docker network create $TEST_NETWORK
    - ((docker stop $TEST_DB && docker rm $TEST_DB) || /bin/true) &&
      docker run -d --name $TEST_DB --network $TEST_NETWORK
      -e POSTGRES_DB=captain_fact_test -e POSTGRES_PASSWORD=postgres
      postgres:9.6
  script:
    - docker run --rm --network $TEST_NETWORK -e MIX_ENV=test -e POSTGRES_HOST=$TEST_DB $CF_API_BUILD_IMAGE /bin/sh -c "mix ecto.reset && mix test"
  after_script:
    - (docker stop $TEST_DB && docker rm $TEST_DB) || /bin/true
    - docker network rm $TEST_NETWORK || /bin/true

build_api:
  state: build
  only: [tags, triggers, schedules, /^(master|staging)$/]
  tags: [docker, captainfact, api]
  script:
    - ./rel/docker/build_release.sh ${CF_API_BUILD_IMAGE} ${CF_API_REST_IMAGE} ${CF_API_GRAPHQL_IMAGE}

release_api:
  stage: release
  only: [tags, triggers, schedules, /^(master|staging)$/]
  tags: [docker, captainfact, api]
  script:
    - echo "Release $CF_API_REST_IMAGE + $CF_API_GRAPHQL_IMAGE"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker push $CF_API_REST_IMAGE
    - docker push $CF_API_GRAPHQL_IMAGE
