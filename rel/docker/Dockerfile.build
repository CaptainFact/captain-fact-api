FROM bitwalker/alpine-elixir:1.6.0

# Install build requirements
RUN apk add gcc make libc-dev libgcc

# Configure
ARG MIX_ENV=prod
ENV MIX_ENV=${MIX_ENV}
ENV HOME=/opt/app/
WORKDIR /opt/app

# Cache dependencies
RUN mkdir -p apps/captain_fact apps/captain_fact_graphql apps/captain_fact_atom_feed apps/db apps/opengraph
COPY mix.exs mix.lock ./
COPY apps/captain_fact/mix.exs apps/captain_fact/
COPY apps/captain_fact_graphql/mix.exs apps/captain_fact_graphql/
COPY apps/captain_fact_atom_feed/mix.exs apps/captain_fact_atom_feed/
COPY apps/db/mix.exs apps/db/
COPY apps/cf_opengraph/mix.exs apps/cf_opengraph/
RUN mix deps.get

# Copy main project and build releases
COPY . .

RUN mix release --name captain_fact --env=$MIX_ENV
RUN mix release --name captain_fact_graphql --env=$MIX_ENV
RUN mix release --name captain_fact_atom_feed --env=$MIX_ENV
RUN mix release --name cf_opengraph --env=$MIX_ENV

RUN tar c -C ./_build/$MIX_ENV/rel/captain_fact/ -f rest-api_release.tar bin lib releases
RUN tar c -C ./_build/$MIX_ENV/rel/captain_fact_graphql/ -f graphql-api_release.tar bin lib releases
RUN tar c -C ./_build/$MIX_ENV/rel/captain_fact_atom_feed/ -f atom-feed_release.tar bin lib releases
RUN tar c -C ./_build/$MIX_ENV/rel/cf_opengraph/ -f cf_opengraph.tar bin lib releases
